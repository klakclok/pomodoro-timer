{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\pomodoro-timer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Settings from './Settings';\nimport Timer from './Timer';\nimport { useState } from \"react\";\nimport SettingsContext from './SettingsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSettings, setShowSettings] = useState(true);\n  const [workMinutes, setWorkMinutes] = useState(45);\n  const [breakMinutes, setBreakMinutes] = useState(15);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n      value: {\n        workMinutes: workMinutes,\n        breakMinutes: 15\n      },\n      children: showSettings ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"1KfS5EPzeDICLou3Jv3gL5OXhQ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Settings","Timer","useState","SettingsContext","App","showSettings","setShowSettings","workMinutes","setWorkMinutes","breakMinutes","setBreakMinutes"],"sources":["C:/Users/PC/Desktop/pomodoro-timer/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Settings from './Settings';\nimport Timer from './Timer';\nimport {useState} from \"react\";\nimport SettingsContext from './SettingsContext';\n\nfunction App() {\n\n  const[showSettings, setShowSettings] = useState(true);\n  const[workMinutes, setWorkMinutes] = useState(45);\n  const[breakMinutes, setBreakMinutes] = useState(15);\n  return (\n      <main>\n          <SettingsContext.Provider value={{\n              workMinutes: workMinutes,\n              breakMinutes: 15,\n\n          }}>\n            {showSettings ? <Settings /> : <Timer />}\n          </SettingsContext.Provider>\n          \n      </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAA/C;EACA,MAAK,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAK,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAA/C;EACA,oBACI;IAAA,uBACI,QAAC,eAAD,CAAiB,QAAjB;MAA0B,KAAK,EAAE;QAC7BK,WAAW,EAAEA,WADgB;QAE7BE,YAAY,EAAE;MAFe,CAAjC;MAAA,UAKGJ,YAAY,gBAAG,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAAH,gBAAkB,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IALjC;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYD;;GAjBQD,G;;KAAAA,G;AAmBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}